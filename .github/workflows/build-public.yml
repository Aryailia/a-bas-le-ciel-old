name: Publish to gh-pages branch (root for hosted site)
on: [push]
jobs:
  make_site:
    runs-on: ubuntu-latest
    steps:
      - name: Cloning master -> vm ./
        uses: actions/checkout@v2  # From the marketplace, by GitHub

      - name: Remove .gitignore    # To commit public later on
        run: rm .gitignore

      - name: Download the data
        run: |
          git clone https://github.com/Aryailia/a-bas-le-ciel-data
          cp ./a-bas-le-ciel-data/compiled/video.json ./a-bas-le-ciel/video.json
          cp ./a-bas-le-ciel-data/compiled/playlist.json ./a-bas-le-ciel/playlist.json

      - name: Build the Site
        env:
          DOMAIN: https://aryailia.github.io
        run: /bin/sh make.sh all


      # In repository settings, place public key in "Deploy Keys", place private key in "Secrets"
      # $ ssh-keygen -t ed25519 -C "your_email@example.com"
      #
      # https://serverfault.com/questions/856194/
      # https://www.webfactory.de/blog/use-ssh-key-for-private-repositories-in-github-actions
      # https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/githubs-ssh-key-fingerprints
      - name: Verify then add GitHub SSH key
        run: |
          [ "$( ssh-keyscan -t rsa github.com | tee github-key-temp | ssh-keygen -lf - 2>/dev/null )" \
          = "2048 SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8 github.com (RSA)" ] \
          || { printf "Invalid GitHub SSH key" >&2; exit 1; }
          mkdir ~/.ssh
          cat github-key-temp >>~/.ssh/known_hosts
          eval "$( ssh-agent -a "$SSH_AUTH_SOCKET" )"
          <<EOF ssh-add -
          ${{ secrets.GH_PAGES_DEPLOY_SECRET }}
          EOF

      - name: Push to gh_pages branch
        env:
          SSH_AUTH_SOCKET: /tmp/ssh_agent.sock
        run: |
          git add public
          git config user.email "bot@users.noreply.github.com"
          git config user.name "Continuous Integration Bot"
          git commit -m 'publishing public'
          git subtree split --prefix public --branch gh-pages
          git checkout gh-pages
          git status
          git remote -v
          git push --force origin gh-pages

